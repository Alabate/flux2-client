/**
 * This file define Error types used in the application
 */


/**
 * Error returned when API answer an error, because Error generated by io.socket request
 * contain only the status code and body. This one will contain status code, correct error
 * message according to body. (if there is one)
 */
export class ApiError extends Error {

    /**
     * constructor
     *
     * @param  {type} jwres Object return by io.socket request
     */
    constructor(jwres) {
        // Default error values
        let message = jwres.error.message;
        let code = jwres.statusCode;
        let status = 'UnexpectedError';
        let formErrors = {};

        // Try to parse body
        if(jwres.body) {
            if(jwres.body._error) {
                message = jwres.body._error.message;
                code = jwres.body._error.code;
                status = jwres.body._error.status;
            }
            else if(jwres.body.code && jwres.body.code == 'E_VALIDATION') {
                status = 'ValidationError';
                message = jwres.body.details;
                formErrors = jwres.body.invalidAttributes;
            }
        }

        // Construct
        super(message);
        this.name = 'ApiError';
        this.code = code;
        this.status = status;
        this.formErrors = formErrors;
    }
 }
